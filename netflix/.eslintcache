[{"/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/index.js":"1","/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/reportWebVitals.js":"2","/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/App.js":"3","/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/pages/Mainpage.jsx":"4","/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/components/VideoItem.jsx":"5","/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/components/VideoContainer.jsx":"6","/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/pages/DetailsPage.jsx":"7"},{"size":500,"mtime":1607097177012,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607005695869,"results":"10","hashOfConfig":"9"},{"size":565,"mtime":1607098977191,"results":"11","hashOfConfig":"9"},{"size":217,"mtime":1607097729246,"results":"12","hashOfConfig":"9"},{"size":423,"mtime":1607099452434,"results":"13","hashOfConfig":"9"},{"size":592,"mtime":1607185355047,"results":"14","hashOfConfig":"9"},{"size":221,"mtime":1607099030979,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1o9wwnt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/index.js",[],["32","33"],"/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/reportWebVitals.js",[],"/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/App.js",["34"],"import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Mainpage from \"./pages/Mainpage\"\nimport DetailsPage from './pages/DetailsPage';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <BrowserRouter>\n      <Switch>\n        <Route path={\"/\"} exact={true}>\n        <Mainpage />\n        </Route>\n        <Route path={\"/details:id\"}>\n          <DetailsPage />\n        </Route>\n      </Switch>\n      </BrowserRouter>\n\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/pages/Mainpage.jsx",[],"/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/components/VideoItem.jsx",[],"/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/components/VideoContainer.jsx",["35"],"/home/zsolt/Documents/Codecool-git/advanced/SI/6.Week/netflix-react/netflix/src/pages/DetailsPage.jsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"45","line":8,"column":15,"nodeType":"46","endLine":13,"endColumn":2},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]